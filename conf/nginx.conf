worker_processes  1;        #nginx worker 数量
error_log /home/jufeng/mai/openresty-test/logs/error.log;   #指定错误日志文件路径
events {
    worker_connections 1024;
}

http {

    # 在生产环境上务必确保 lua_code_cache 设置成 on
    lua_code_cache on;
    lua_package_path  "/home/jufeng/mai/openresty-test/lualib/?.lua;;";
    lua_package_cpath  "/home/jufeng/mai/openresty-test/lualib/?.so;;";
    lua_shared_dict my_cache 128m;
    server {
        #监听端口，若你的6699端口已经被占用，则需要修改
        listen 80;
        server_name www.jufeng.com;

        location /HelloWorld {
            default_type text/html;
            content_by_lua_block {
                ngx.say("HelloWorld")
            }
        }

        location /sum {
            default_type text/html;
            content_by_lua_file /home/jufeng/mai/openresty-test/lualib/resty/test/sum.lua;
        }

        location /sum_internal {
            internal;
            content_by_lua_block{
                ngx.sleep(0.1)
                local args = ngx.req.get_uri_args()
                ngx.print(tonumber(args.a) + tonumber(args.b))
            }
        }

        location /subduction_internal {
                internal;
                content_by_lua_block{
                    ngx.sleep(0.1)
                    local args = ngx.req.get_uri_args()
                    ngx.print(tonumber(args.a) - tonumber(args.b))
                }
        }

        location /test_parallels {
            content_by_lua_block{
                local start_time = ngx.now()
                local res1 ,res2 = ngx.location.capture_multi(
                    {
                        {"/sum_internal",{args={a=3,b=4}}},
                        {"/subduction_internal",{args={a=4,b=5}}}

                    }
                )

                ngx.say("status:", res1.status, " response:", res1.body)
                ngx.say("status:", res2.status, " response:", res2.body)
                ngx.say("time used:", ngx.now() - start_time)
            }
        }

        location /args_test {
            content_by_lua_file /home/jufeng/mai/openresty-test/lualib/resty/test/args.lua;
        }

        location /encode_args_test{
            content_by_lua_file /home/jufeng/mai/openresty-test/lualib/resty/test/encode_args_test.lua;
        }

        #lua_need_request_body on;
        location /body_test {
           content_by_lua_file /home/jufeng/mai/openresty-test/lualib/resty/test/get_body.lua;
        }

        location /log_test {
            content_by_lua_file /home/jufeng/mai/openresty-test/lualib/resty/test/log.lua;
        }

        location /ngx_ctx {
             rewrite_by_lua_block {
                 ngx.ctx.foo = 76
             }
             access_by_lua_block {
                 ngx.ctx.foo = ngx.ctx.foo + 3
             }
             content_by_lua_block {
                 ngx.say(ngx.ctx.foo)
             }
        }

        location /cookie_test {
             content_by_lua_file /home/jufeng/mai/openresty-test/lualib/resty/test/cookies.lua;
        }

        location /ngx_var_test {
             content_by_lua_file /home/jufeng/mai/openresty-test/lualib/resty/test/ngx_var.lua;
        }

        location /run_process {
            set_by_lua_block $a {
                ngx.log(ngx.ERR, "set_by_lua*,流程分支处理判断变量初始化")
            }

            rewrite_by_lua_block {
                ngx.log(ngx.ERR, "rewrite_by_lua* 转发、重定向、缓存等功能(例如特定请求代理到外网)")
            }

            access_by_lua_block {
                ngx.log(ngx.ERR, "access_by_lua*  IP 准入、接口权限等情况集中处理(例如配合 iptable 完成简单防火墙)")
            }

            content_by_lua_block {
                ngx.log(ngx.ERR, "content_by_lua* 内容生成")
            }

            header_filter_by_lua_block {
                ngx.log(ngx.ERR, "header_filter_by_lua* 响应头部过滤处理(例如添加头部信息)")
            }

             body_filter_by_lua_block {
                ngx.log(ngx.ERR, "body_filter_by_lua* 响应体过滤处理(例如完成应答内容统一成大写)")
            }
            log_by_lua_block {
                ngx.log(ngx.ERR, "log_by_lua* 会话完成后本地异步完成日志记录(日志可以记录在本地，还可以同步到其他机器)" )
            }
        }

        location /lua_shared_dict_test {
            content_by_lua_file /home/jufeng/mai/openresty-test/lualib/resty/test/shared_dict.lua;
        }
    }
}